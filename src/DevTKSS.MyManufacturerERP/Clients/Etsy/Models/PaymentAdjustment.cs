// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// Represents a refund, which applies to a prior Etsy payment. All monetary amounts are in USD pennies unless otherwise specified.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PaymentAdjustment : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The numeric amount of the refund in the buyer currency.</summary>
        public int? BuyerTotalAdjustmentAmount { get; set; }
        /// <summary>The transaction&apos;s creation date and time, in epoch seconds.</summary>
        public int? CreatedTimestamp { get; set; }
        /// <summary>The transaction&apos;s creation date and time, in epoch seconds.</summary>
        public int? CreateTimestamp { get; set; }
        /// <summary>When true, the payment adjustment was or is likely to complete successfully.</summary>
        public bool? IsSuccess { get; set; }
        /// <summary>The numeric ID for a payment adjustment.</summary>
        public long? PaymentAdjustmentId { get; set; }
        /// <summary>List of payment adjustment line items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustmentItem>? PaymentAdjustmentItems { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustmentItem> PaymentAdjustmentItems { get; set; }
#endif
        /// <summary>A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).</summary>
        public long? PaymentId { get; set; }
        /// <summary>A human-readable string describing the reason for the refund.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReasonCode { get; set; }
#nullable restore
#else
        public string ReasonCode { get; set; }
#endif
        /// <summary>The numeric amount of the refund in the shop currency.</summary>
        public int? ShopTotalAdjustmentAmount { get; set; }
        /// <summary>The status string of the payment adjustment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The total numeric amount of the refund in the payment currency.</summary>
        public int? TotalAdjustmentAmount { get; set; }
        /// <summary>The numeric amount of card processing fees associated with a payment adjustment.</summary>
        public int? TotalFeeAdjustmentAmount { get; set; }
        /// <summary>The date and time of the last change to the payment adjustment in epoch seconds.</summary>
        public int? UpdatedTimestamp { get; set; }
        /// <summary>The date and time of the last change to the payment adjustment in epoch seconds.</summary>
        public int? UpdateTimestamp { get; set; }
        /// <summary>The numeric ID for the [user](/documentation/reference#tag/User) (seller) fulfilling the purchase.</summary>
        public long? UserId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment"/> and sets the default values.
        /// </summary>
        public PaymentAdjustment()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "buyer_total_adjustment_amount", n => { BuyerTotalAdjustmentAmount = n.GetIntValue(); } },
                { "create_timestamp", n => { CreateTimestamp = n.GetIntValue(); } },
                { "created_timestamp", n => { CreatedTimestamp = n.GetIntValue(); } },
                { "is_success", n => { IsSuccess = n.GetBoolValue(); } },
                { "payment_adjustment_id", n => { PaymentAdjustmentId = n.GetLongValue(); } },
                { "payment_adjustment_items", n => { PaymentAdjustmentItems = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustmentItem>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustmentItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "payment_id", n => { PaymentId = n.GetLongValue(); } },
                { "reason_code", n => { ReasonCode = n.GetStringValue(); } },
                { "shop_total_adjustment_amount", n => { ShopTotalAdjustmentAmount = n.GetIntValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "total_adjustment_amount", n => { TotalAdjustmentAmount = n.GetIntValue(); } },
                { "total_fee_adjustment_amount", n => { TotalFeeAdjustmentAmount = n.GetIntValue(); } },
                { "update_timestamp", n => { UpdateTimestamp = n.GetIntValue(); } },
                { "updated_timestamp", n => { UpdatedTimestamp = n.GetIntValue(); } },
                { "user_id", n => { UserId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("buyer_total_adjustment_amount", BuyerTotalAdjustmentAmount);
            writer.WriteIntValue("created_timestamp", CreatedTimestamp);
            writer.WriteIntValue("create_timestamp", CreateTimestamp);
            writer.WriteBoolValue("is_success", IsSuccess);
            writer.WriteLongValue("payment_adjustment_id", PaymentAdjustmentId);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustmentItem>("payment_adjustment_items", PaymentAdjustmentItems);
            writer.WriteLongValue("payment_id", PaymentId);
            writer.WriteStringValue("reason_code", ReasonCode);
            writer.WriteIntValue("shop_total_adjustment_amount", ShopTotalAdjustmentAmount);
            writer.WriteStringValue("status", Status);
            writer.WriteIntValue("total_adjustment_amount", TotalAdjustmentAmount);
            writer.WriteIntValue("total_fee_adjustment_amount", TotalFeeAdjustmentAmount);
            writer.WriteIntValue("updated_timestamp", UpdatedTimestamp);
            writer.WriteIntValue("update_timestamp", UpdateTimestamp);
            writer.WriteLongValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
