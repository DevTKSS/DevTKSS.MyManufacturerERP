// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A taxonomy node in the buyer taxonomy tree.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BuyerTaxonomyNode : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>An array of taxonomy nodes for all the direct children of this taxonomy node in the seller taxonomy tree.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode>? Children { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode> Children { get; set; }
#endif
        /// <summary>An array of `taxonomy_id`s including this node and all of its direct parents in the seller taxonomy tree up to a root node. They are listed in order from root to leaf.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? FullPathTaxonomyIds { get; set; }
#nullable restore
#else
        public List<long?> FullPathTaxonomyIds { get; set; }
#endif
        /// <summary>The unique numeric ID of an Etsy taxonomy node, which is a metadata category for listings organized into the seller taxonomy hierarchy tree. For example, the &quot;shoes&quot; taxonomy node (ID: 1429, level: 1) is higher in the hierarchy than &quot;girls&apos; shoes&quot; (ID: 1440, level: 2). The taxonomy nodes assigned to a listing support access to specific standardized product scales and properties. For example, listings assigned the taxonomy nodes &quot;shoes&quot; or &quot;girls&apos; shoes&quot; support access to the &quot;EU&quot; shoe size scale with its associated property names and IDs for EU shoe sizes, such as property `value_id`:&quot;1394&quot;, and `name`:&quot;38&quot;.</summary>
        public long? Id { get; set; }
        /// <summary>The integer depth of this taxonomy node in the seller taxonomy tree, with roots at level 0.</summary>
        public int? Level { get; set; }
        /// <summary>The name string for this taxonomy node.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The numeric taxonomy ID of the parent of this node.</summary>
        public long? ParentId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode"/> and sets the default values.
        /// </summary>
        public BuyerTaxonomyNode()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "children", n => { Children = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode.CreateFromDiscriminatorValue)?.AsList(); } },
                { "full_path_taxonomy_ids", n => { FullPathTaxonomyIds = n.GetCollectionOfPrimitiveValues<long?>()?.AsList(); } },
                { "id", n => { Id = n.GetLongValue(); } },
                { "level", n => { Level = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent_id", n => { ParentId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.BuyerTaxonomyNode>("children", Children);
            writer.WriteCollectionOfPrimitiveValues<long?>("full_path_taxonomy_ids", FullPathTaxonomyIds);
            writer.WriteLongValue("id", Id);
            writer.WriteIntValue("level", Level);
            writer.WriteStringValue("name", Name);
            writer.WriteLongValue("parent_id", ParentId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
