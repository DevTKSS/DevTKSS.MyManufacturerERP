// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A shop created by an Etsy user.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Shop : IAdditionalDataHolder, IParsable
    {
        /// <summary>When true, the shop accepts customization requests.</summary>
        public bool? AcceptsCustomRequests { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>An announcement string to buyers that displays on the shop&apos;s homepage.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Announcement { get; set; }
#nullable restore
#else
        public string Announcement { get; set; }
#endif
        /// <summary>The date and time this shop was created, in epoch seconds.</summary>
        public int? CreateDate { get; set; }
        /// <summary>The date and time this shop was created, in epoch seconds.</summary>
        public int? CreatedTimestamp { get; set; }
        /// <summary>The ISO (alphabetic) code for the shop&apos;s currency. The shop displays all prices in this currency by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode { get; set; }
#nullable restore
#else
        public string CurrencyCode { get; set; }
#endif
        /// <summary>The number of digital listings in the shop.</summary>
        public int? DigitalListingCount { get; set; }
        /// <summary>A message string sent to users who purchase a digital item from this shop.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DigitalSaleMessage { get; set; }
#nullable restore
#else
        public string DigitalSaleMessage { get; set; }
#endif
        /// <summary>When true, the shop accepted OR declined after viewing structured policies onboarding.</summary>
        public bool? HasOnboardedStructuredPolicies { get; set; }
        /// <summary>When true, the shop displays additional unstructured policy fields.</summary>
        public bool? HasUnstructuredPolicies { get; set; }
        /// <summary>The URL string for this shop&apos;s icon image.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IconUrlFullxfull { get; set; }
#nullable restore
#else
        public string IconUrlFullxfull { get; set; }
#endif
        /// <summary>The URL string for this shop&apos;s banner image.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl760x100 { get; set; }
#nullable restore
#else
        public string ImageUrl760x100 { get; set; }
#endif
        /// <summary>When true, this shop&apos;s policies include a link to an EU online dispute form.</summary>
        public bool? IncludeDisputeFormLink { get; set; }
        /// <summary>When true, the shop is eligible for calculated shipping profiles. (Only available in the US and Canada)</summary>
        public bool? IsCalculatedEligible { get; set; }
        /// <summary>(**DEPRECATED: Replaced by _is_etsy_payments_onboarded_.) When true, the shop has onboarded onto Etsy Payments.</summary>
        public bool? IsDirectCheckoutOnboarded { get; set; }
        /// <summary>When true, the shop has onboarded onto Etsy Payments.</summary>
        public bool? IsEtsyPaymentsOnboarded { get; set; }
        /// <summary>When true, the shop opted in to buyer promise.</summary>
        public bool? IsOptedInToBuyerPromise { get; set; }
        /// <summary>When true, the shop is based in the US.</summary>
        public bool? IsShopUsBased { get; set; }
        /// <summary>When true, the shop accepted using structured policies.</summary>
        public bool? IsUsingStructuredPolicies { get; set; }
        /// <summary>When true, this shop is not accepting purchases.</summary>
        public bool? IsVacation { get; set; }
        /// <summary>A list of language strings for the shop&apos;s enrolled languages where the default shop language is the first element in the array.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Languages { get; set; }
#nullable restore
#else
        public List<string> Languages { get; set; }
#endif
        /// <summary>The number of active listings in the shop.</summary>
        public int? ListingActiveCount { get; set; }
        /// <summary>The shop owner&apos;s login name string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LoginName { get; set; }
#nullable restore
#else
        public string LoginName { get; set; }
#endif
        /// <summary>The number of users who marked this shop a favorite.</summary>
        public int? NumFavorers { get; set; }
        /// <summary>The shop&apos;s additional policies string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyAdditional { get; set; }
#nullable restore
#else
        public string PolicyAdditional { get; set; }
#endif
        /// <summary>When true, EU receipts display private info.</summary>
        public bool? PolicyHasPrivateReceiptInfo { get; set; }
        /// <summary>The shop&apos;s payment policy string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyPayment { get; set; }
#nullable restore
#else
        public string PolicyPayment { get; set; }
#endif
        /// <summary>The shop&apos;s privacy policy string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyPrivacy { get; set; }
#nullable restore
#else
        public string PolicyPrivacy { get; set; }
#endif
        /// <summary>The shop&apos;s refund policy string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyRefunds { get; set; }
#nullable restore
#else
        public string PolicyRefunds { get; set; }
#endif
        /// <summary>The shop&apos;s seller information string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicySellerInfo { get; set; }
#nullable restore
#else
        public string PolicySellerInfo { get; set; }
#endif
        /// <summary>The shop&apos;s shipping policy string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyShipping { get; set; }
#nullable restore
#else
        public string PolicyShipping { get; set; }
#endif
        /// <summary>The date and time of the last update to the shop&apos;s policies, in epoch seconds.</summary>
        public int? PolicyUpdateDate { get; set; }
        /// <summary>The shop&apos;s policy welcome string (may be blank).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyWelcome { get; set; }
#nullable restore
#else
        public string PolicyWelcome { get; set; }
#endif
        /// <summary>Average rating based on reviews of shop listings in the past year.</summary>
        public float? ReviewAverage { get; set; }
        /// <summary>Number of reviews of shop listings in the past year.</summary>
        public int? ReviewCount { get; set; }
        /// <summary>A message string sent to users who complete a purchase from this shop.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SaleMessage { get; set; }
#nullable restore
#else
        public string SaleMessage { get; set; }
#endif
        /// <summary>The country iso the shop is shipping from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShippingFromCountryIso { get; set; }
#nullable restore
#else
        public string ShippingFromCountryIso { get; set; }
#endif
        /// <summary>The unique positive non-zero numeric ID for an Etsy Shop.</summary>
        public long? ShopId { get; set; }
        /// <summary>The country iso where the shop is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShopLocationCountryIso { get; set; }
#nullable restore
#else
        public string ShopLocationCountryIso { get; set; }
#endif
        /// <summary>The shop&apos;s name string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShopName { get; set; }
#nullable restore
#else
        public string ShopName { get; set; }
#endif
        /// <summary>A brief heading string for the shop&apos;s main page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The total number of sales ([transactions](/documentation/reference#tag/Shop-Receipt-Transactions)) for this shop.</summary>
        public int? TransactionSoldCount { get; set; }
        /// <summary>The date and time of the last update to the shop, in epoch seconds.</summary>
        public int? UpdateDate { get; set; }
        /// <summary>The date and time of the last update to the shop, in epoch seconds.</summary>
        public int? UpdatedTimestamp { get; set; }
        /// <summary>The URL string for this shop.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The numeric user ID of the [user](/documentation/reference#tag/User) who owns this shop.</summary>
        public long? UserId { get; set; }
        /// <summary>The shop&apos;s automatic reply string displayed in new conversations when `is_vacation` is true.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VacationAutoreply { get; set; }
#nullable restore
#else
        public string VacationAutoreply { get; set; }
#endif
        /// <summary>The shop&apos;s message string displayed when `is_vacation` is true.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VacationMessage { get; set; }
#nullable restore
#else
        public string VacationMessage { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.Shop"/> and sets the default values.
        /// </summary>
        public Shop()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.Shop"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.Shop CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.Shop();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accepts_custom_requests", n => { AcceptsCustomRequests = n.GetBoolValue(); } },
                { "announcement", n => { Announcement = n.GetStringValue(); } },
                { "create_date", n => { CreateDate = n.GetIntValue(); } },
                { "created_timestamp", n => { CreatedTimestamp = n.GetIntValue(); } },
                { "currency_code", n => { CurrencyCode = n.GetStringValue(); } },
                { "digital_listing_count", n => { DigitalListingCount = n.GetIntValue(); } },
                { "digital_sale_message", n => { DigitalSaleMessage = n.GetStringValue(); } },
                { "has_onboarded_structured_policies", n => { HasOnboardedStructuredPolicies = n.GetBoolValue(); } },
                { "has_unstructured_policies", n => { HasUnstructuredPolicies = n.GetBoolValue(); } },
                { "icon_url_fullxfull", n => { IconUrlFullxfull = n.GetStringValue(); } },
                { "image_url_760x100", n => { ImageUrl760x100 = n.GetStringValue(); } },
                { "include_dispute_form_link", n => { IncludeDisputeFormLink = n.GetBoolValue(); } },
                { "is_calculated_eligible", n => { IsCalculatedEligible = n.GetBoolValue(); } },
                { "is_direct_checkout_onboarded", n => { IsDirectCheckoutOnboarded = n.GetBoolValue(); } },
                { "is_etsy_payments_onboarded", n => { IsEtsyPaymentsOnboarded = n.GetBoolValue(); } },
                { "is_opted_in_to_buyer_promise", n => { IsOptedInToBuyerPromise = n.GetBoolValue(); } },
                { "is_shop_us_based", n => { IsShopUsBased = n.GetBoolValue(); } },
                { "is_using_structured_policies", n => { IsUsingStructuredPolicies = n.GetBoolValue(); } },
                { "is_vacation", n => { IsVacation = n.GetBoolValue(); } },
                { "languages", n => { Languages = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "listing_active_count", n => { ListingActiveCount = n.GetIntValue(); } },
                { "login_name", n => { LoginName = n.GetStringValue(); } },
                { "num_favorers", n => { NumFavorers = n.GetIntValue(); } },
                { "policy_additional", n => { PolicyAdditional = n.GetStringValue(); } },
                { "policy_has_private_receipt_info", n => { PolicyHasPrivateReceiptInfo = n.GetBoolValue(); } },
                { "policy_payment", n => { PolicyPayment = n.GetStringValue(); } },
                { "policy_privacy", n => { PolicyPrivacy = n.GetStringValue(); } },
                { "policy_refunds", n => { PolicyRefunds = n.GetStringValue(); } },
                { "policy_seller_info", n => { PolicySellerInfo = n.GetStringValue(); } },
                { "policy_shipping", n => { PolicyShipping = n.GetStringValue(); } },
                { "policy_update_date", n => { PolicyUpdateDate = n.GetIntValue(); } },
                { "policy_welcome", n => { PolicyWelcome = n.GetStringValue(); } },
                { "review_average", n => { ReviewAverage = n.GetFloatValue(); } },
                { "review_count", n => { ReviewCount = n.GetIntValue(); } },
                { "sale_message", n => { SaleMessage = n.GetStringValue(); } },
                { "shipping_from_country_iso", n => { ShippingFromCountryIso = n.GetStringValue(); } },
                { "shop_id", n => { ShopId = n.GetLongValue(); } },
                { "shop_location_country_iso", n => { ShopLocationCountryIso = n.GetStringValue(); } },
                { "shop_name", n => { ShopName = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "transaction_sold_count", n => { TransactionSoldCount = n.GetIntValue(); } },
                { "update_date", n => { UpdateDate = n.GetIntValue(); } },
                { "updated_timestamp", n => { UpdatedTimestamp = n.GetIntValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "user_id", n => { UserId = n.GetLongValue(); } },
                { "vacation_autoreply", n => { VacationAutoreply = n.GetStringValue(); } },
                { "vacation_message", n => { VacationMessage = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("accepts_custom_requests", AcceptsCustomRequests);
            writer.WriteStringValue("announcement", Announcement);
            writer.WriteIntValue("create_date", CreateDate);
            writer.WriteIntValue("created_timestamp", CreatedTimestamp);
            writer.WriteStringValue("currency_code", CurrencyCode);
            writer.WriteIntValue("digital_listing_count", DigitalListingCount);
            writer.WriteStringValue("digital_sale_message", DigitalSaleMessage);
            writer.WriteBoolValue("has_onboarded_structured_policies", HasOnboardedStructuredPolicies);
            writer.WriteBoolValue("has_unstructured_policies", HasUnstructuredPolicies);
            writer.WriteStringValue("icon_url_fullxfull", IconUrlFullxfull);
            writer.WriteStringValue("image_url_760x100", ImageUrl760x100);
            writer.WriteBoolValue("include_dispute_form_link", IncludeDisputeFormLink);
            writer.WriteBoolValue("is_calculated_eligible", IsCalculatedEligible);
            writer.WriteBoolValue("is_direct_checkout_onboarded", IsDirectCheckoutOnboarded);
            writer.WriteBoolValue("is_etsy_payments_onboarded", IsEtsyPaymentsOnboarded);
            writer.WriteBoolValue("is_opted_in_to_buyer_promise", IsOptedInToBuyerPromise);
            writer.WriteBoolValue("is_shop_us_based", IsShopUsBased);
            writer.WriteBoolValue("is_using_structured_policies", IsUsingStructuredPolicies);
            writer.WriteBoolValue("is_vacation", IsVacation);
            writer.WriteCollectionOfPrimitiveValues<string>("languages", Languages);
            writer.WriteIntValue("listing_active_count", ListingActiveCount);
            writer.WriteStringValue("login_name", LoginName);
            writer.WriteIntValue("num_favorers", NumFavorers);
            writer.WriteStringValue("policy_additional", PolicyAdditional);
            writer.WriteBoolValue("policy_has_private_receipt_info", PolicyHasPrivateReceiptInfo);
            writer.WriteStringValue("policy_payment", PolicyPayment);
            writer.WriteStringValue("policy_privacy", PolicyPrivacy);
            writer.WriteStringValue("policy_refunds", PolicyRefunds);
            writer.WriteStringValue("policy_seller_info", PolicySellerInfo);
            writer.WriteStringValue("policy_shipping", PolicyShipping);
            writer.WriteIntValue("policy_update_date", PolicyUpdateDate);
            writer.WriteStringValue("policy_welcome", PolicyWelcome);
            writer.WriteFloatValue("review_average", ReviewAverage);
            writer.WriteIntValue("review_count", ReviewCount);
            writer.WriteStringValue("sale_message", SaleMessage);
            writer.WriteStringValue("shipping_from_country_iso", ShippingFromCountryIso);
            writer.WriteLongValue("shop_id", ShopId);
            writer.WriteStringValue("shop_location_country_iso", ShopLocationCountryIso);
            writer.WriteStringValue("shop_name", ShopName);
            writer.WriteStringValue("title", Title);
            writer.WriteIntValue("transaction_sold_count", TransactionSoldCount);
            writer.WriteIntValue("update_date", UpdateDate);
            writer.WriteIntValue("updated_timestamp", UpdatedTimestamp);
            writer.WriteStringValue("url", Url);
            writer.WriteLongValue("user_id", UserId);
            writer.WriteStringValue("vacation_autoreply", VacationAutoreply);
            writer.WriteStringValue("vacation_message", VacationMessage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
