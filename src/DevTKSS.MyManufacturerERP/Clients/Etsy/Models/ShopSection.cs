// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A section within a shop, into which a user can sort listings.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ShopSection : IAdditionalDataHolder, IParsable
    {
        /// <summary>The number of active listings in one section of a specific Etsy shop.</summary>
        public int? ActiveListingCount { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The positive non-zero numeric position of this section in the section display order for a shop, with rank 1 sections appearing first.</summary>
        public int? Rank { get; set; }
        /// <summary>The numeric ID of a section in a specific Etsy shop.</summary>
        public long? ShopSectionId { get; set; }
        /// <summary>The title string for a shop section.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The numeric ID of the [user](/documentation/reference#tag/User) who owns this shop section.</summary>
        public long? UserId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopSection"/> and sets the default values.
        /// </summary>
        public ShopSection()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopSection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopSection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopSection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_listing_count", n => { ActiveListingCount = n.GetIntValue(); } },
                { "rank", n => { Rank = n.GetIntValue(); } },
                { "shop_section_id", n => { ShopSectionId = n.GetLongValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "user_id", n => { UserId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("active_listing_count", ActiveListingCount);
            writer.WriteIntValue("rank", Rank);
            writer.WriteLongValue("shop_section_id", ShopSectionId);
            writer.WriteStringValue("title", Title);
            writer.WriteLongValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
