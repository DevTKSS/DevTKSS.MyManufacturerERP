// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// Represents an entry in a shop&apos;s ledger.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PaymentAccountLedgerEntry : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount of money credited to the ledger.</summary>
        public int? Amount { get; set; }
        /// <summary>The amount of money in the shop&apos;s ledger the moment after this entry was applied.</summary>
        public int? Balance { get; set; }
        /// <summary>The date and time the ledger entry was created in Epoch seconds.</summary>
        public int? CreateDate { get; set; }
        /// <summary>The date and time the ledger entry was created in Epoch seconds.</summary>
        public int? CreatedTimestamp { get; set; }
        /// <summary>The currency of the entry on the ledger.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The ledger entry&apos;s numeric ID.</summary>
        public long? EntryId { get; set; }
        /// <summary>The ledger&apos;s numeric ID.</summary>
        public long? LedgerId { get; set; }
        /// <summary>The original reference type for the ledger entry.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LedgerType { get; set; }
#nullable restore
#else
        public string LedgerType { get; set; }
#endif
        /// <summary>List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment>? PaymentAdjustments { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment> PaymentAdjustments { get; set; }
#endif
        /// <summary>The object id the ledger entry refers to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferenceId { get; set; }
#nullable restore
#else
        public string ReferenceId { get; set; }
#endif
        /// <summary>The object type the ledger entry refers to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferenceType { get; set; }
#nullable restore
#else
        public string ReferenceType { get; set; }
#endif
        /// <summary>The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.</summary>
        public int? SequenceNumber { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAccountLedgerEntry"/> and sets the default values.
        /// </summary>
        public PaymentAccountLedgerEntry()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAccountLedgerEntry"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAccountLedgerEntry CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAccountLedgerEntry();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "balance", n => { Balance = n.GetIntValue(); } },
                { "create_date", n => { CreateDate = n.GetIntValue(); } },
                { "created_timestamp", n => { CreatedTimestamp = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "entry_id", n => { EntryId = n.GetLongValue(); } },
                { "ledger_id", n => { LedgerId = n.GetLongValue(); } },
                { "ledger_type", n => { LedgerType = n.GetStringValue(); } },
                { "payment_adjustments", n => { PaymentAdjustments = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "reference_id", n => { ReferenceId = n.GetStringValue(); } },
                { "reference_type", n => { ReferenceType = n.GetStringValue(); } },
                { "sequence_number", n => { SequenceNumber = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteIntValue("balance", Balance);
            writer.WriteIntValue("create_date", CreateDate);
            writer.WriteIntValue("created_timestamp", CreatedTimestamp);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("description", Description);
            writer.WriteLongValue("entry_id", EntryId);
            writer.WriteLongValue("ledger_id", LedgerId);
            writer.WriteStringValue("ledger_type", LedgerType);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.PaymentAdjustment>("payment_adjustments", PaymentAdjustments);
            writer.WriteStringValue("reference_id", ReferenceId);
            writer.WriteStringValue("reference_type", ReferenceType);
            writer.WriteIntValue("sequence_number", SequenceNumber);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
