// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// The record of one shipment event for a ShopReceipt. A receipt may have many ShopReceiptShipment records.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ShopReceiptShipment : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The name string for the carrier/company responsible for delivering the shipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CarrierName { get; set; }
#nullable restore
#else
        public string CarrierName { get; set; }
#endif
        /// <summary>The unique numeric ID of a Shop Receipt Shipment record.</summary>
        public long? ReceiptShippingId { get; set; }
        /// <summary>The time at which Etsy notified the buyer of the shipment event, in epoch seconds.</summary>
        public int? ShipmentNotificationTimestamp { get; set; }
        /// <summary>The tracking code string provided by the carrier/company for the shipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackingCode { get; set; }
#nullable restore
#else
        public string TrackingCode { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopReceiptShipment"/> and sets the default values.
        /// </summary>
        public ShopReceiptShipment()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopReceiptShipment"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopReceiptShipment CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopReceiptShipment();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "carrier_name", n => { CarrierName = n.GetStringValue(); } },
                { "receipt_shipping_id", n => { ReceiptShippingId = n.GetLongValue(); } },
                { "shipment_notification_timestamp", n => { ShipmentNotificationTimestamp = n.GetIntValue(); } },
                { "tracking_code", n => { TrackingCode = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("carrier_name", CarrierName);
            writer.WriteLongValue("receipt_shipping_id", ReceiptShippingId);
            writer.WriteIntValue("shipment_notification_timestamp", ShipmentNotificationTimestamp);
            writer.WriteStringValue("tracking_code", TrackingCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
