// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// Represents a shop&apos;s holiday preference
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ShopHolidayPreference : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The country iso where the shop is located.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryIso { get; set; }
#nullable restore
#else
        public string CountryIso { get; set; }
#endif
        /// <summary>The unique id that maps to the holiday a country observes. See the [Fulfillment Tutorial docs](https://developer.etsy.com/documentation/tutorials/fulfillment/#country-holidays) for more info</summary>
        public global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference_holiday_id? HolidayId { get; set; }
        /// <summary>The name of the holiday that a country observes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HolidayName { get; set; }
#nullable restore
#else
        public string HolidayName { get; set; }
#endif
        /// <summary>A boolean value for whether the shop will process orders on a particular holiday.</summary>
        public bool? IsWorking { get; set; }
        /// <summary>The unique positive non-zero numeric ID for an Etsy Shop.</summary>
        public long? ShopId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference"/> and sets the default values.
        /// </summary>
        public ShopHolidayPreference()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "country_iso", n => { CountryIso = n.GetStringValue(); } },
                { "holiday_id", n => { HolidayId = n.GetEnumValue<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference_holiday_id>(); } },
                { "holiday_name", n => { HolidayName = n.GetStringValue(); } },
                { "is_working", n => { IsWorking = n.GetBoolValue(); } },
                { "shop_id", n => { ShopId = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("country_iso", CountryIso);
            writer.WriteEnumValue<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopHolidayPreference_holiday_id>("holiday_id", HolidayId);
            writer.WriteStringValue("holiday_name", HolidayName);
            writer.WriteBoolValue("is_working", IsWorking);
            writer.WriteLongValue("shop_id", ShopId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
