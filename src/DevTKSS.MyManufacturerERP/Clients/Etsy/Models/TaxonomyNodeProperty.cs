// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A product property definition.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TaxonomyNodeProperty : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The human-readable product property name string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>When true, you can assign multiple property values to this property</summary>
        public bool? IsMultivalued { get; set; }
        /// <summary>When true, listings assigned eligible taxonomy IDs require this property.</summary>
        public bool? IsRequired { get; set; }
        /// <summary>When true, you can assign multiple property values to this property</summary>
        public int? MaxValuesAllowed { get; set; }
        /// <summary>The name string for this taxonomy node.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>A list of supported property value strings for this property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>? PossibleValues { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue> PossibleValues { get; set; }
#endif
        /// <summary>The unique numeric ID of this product property.</summary>
        public long? PropertyId { get; set; }
        /// <summary>A list of available scales.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyScale>? Scales { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyScale> Scales { get; set; }
#endif
        /// <summary>A list of property value strings automatically and always selected for the given property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>? SelectedValues { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue> SelectedValues { get; set; }
#endif
        /// <summary>When true, you can use this property in listing attributes.</summary>
        public bool? SupportsAttributes { get; set; }
        /// <summary>When true, you can use this property in listing variations.</summary>
        public bool? SupportsVariations { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyNodeProperty"/> and sets the default values.
        /// </summary>
        public TaxonomyNodeProperty()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyNodeProperty"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyNodeProperty CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyNodeProperty();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "is_multivalued", n => { IsMultivalued = n.GetBoolValue(); } },
                { "is_required", n => { IsRequired = n.GetBoolValue(); } },
                { "max_values_allowed", n => { MaxValuesAllowed = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "possible_values", n => { PossibleValues = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue.CreateFromDiscriminatorValue)?.AsList(); } },
                { "property_id", n => { PropertyId = n.GetLongValue(); } },
                { "scales", n => { Scales = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyScale>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyScale.CreateFromDiscriminatorValue)?.AsList(); } },
                { "selected_values", n => { SelectedValues = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue.CreateFromDiscriminatorValue)?.AsList(); } },
                { "supports_attributes", n => { SupportsAttributes = n.GetBoolValue(); } },
                { "supports_variations", n => { SupportsVariations = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteBoolValue("is_multivalued", IsMultivalued);
            writer.WriteBoolValue("is_required", IsRequired);
            writer.WriteIntValue("max_values_allowed", MaxValuesAllowed);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>("possible_values", PossibleValues);
            writer.WriteLongValue("property_id", PropertyId);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyScale>("scales", Scales);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.TaxonomyPropertyValue>("selected_values", SelectedValues);
            writer.WriteBoolValue("supports_attributes", SupportsAttributes);
            writer.WriteBoolValue("supports_variations", SupportsVariations);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
