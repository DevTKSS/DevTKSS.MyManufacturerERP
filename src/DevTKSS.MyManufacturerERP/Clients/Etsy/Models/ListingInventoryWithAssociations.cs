// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A representation of a single listing&apos;s inventory record with associations
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ListingInventoryWithAssociations : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>An enumerated string that attaches a valid association. Default value is null.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListing? Listing { get; set; }
#nullable restore
#else
        public global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListing Listing { get; set; }
#endif
        /// <summary>An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change product prices, if any. For example, if you charge specific prices for different sized products in the same listing, then this array contains the property ID for size.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? PriceOnProperty { get; set; }
#nullable restore
#else
        public List<int?> PriceOnProperty { get; set; }
#endif
        /// <summary>A JSON array of products available in a listing, even if only one product. All field names in the JSON blobs are lowercase.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryProduct>? Products { get; set; }
#nullable restore
#else
        public List<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryProduct> Products { get; set; }
#endif
        /// <summary>An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the quantity of the products, if any. For example, if you stock specific quantities of different colored products in the same listing, then this array contains the property ID for color.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? QuantityOnProperty { get; set; }
#nullable restore
#else
        public List<int?> QuantityOnProperty { get; set; }
#endif
        /// <summary>An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the product SKU, if any. For example, if you use specific skus for different colored products in the same listing, then this array contains the property ID for color.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? SkuOnProperty { get; set; }
#nullable restore
#else
        public List<int?> SkuOnProperty { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryWithAssociations"/> and sets the default values.
        /// </summary>
        public ListingInventoryWithAssociations()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryWithAssociations"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryWithAssociations CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryWithAssociations();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "listing", n => { Listing = n.GetObjectValue<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListing>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListing.CreateFromDiscriminatorValue); } },
                { "price_on_property", n => { PriceOnProperty = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "products", n => { Products = n.GetCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryProduct>(global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryProduct.CreateFromDiscriminatorValue)?.AsList(); } },
                { "quantity_on_property", n => { QuantityOnProperty = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "sku_on_property", n => { SkuOnProperty = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListing>("listing", Listing);
            writer.WriteCollectionOfPrimitiveValues<int?>("price_on_property", PriceOnProperty);
            writer.WriteCollectionOfObjectValues<global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ListingInventoryProduct>("products", Products);
            writer.WriteCollectionOfPrimitiveValues<int?>("quantity_on_property", QuantityOnProperty);
            writer.WriteCollectionOfPrimitiveValues<int?>("sku_on_property", SkuOnProperty);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
