// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DevTKSS.MyManufacturerERP.Clients.Etsy.Models
{
    /// <summary>
    /// A file associated with a digital listing.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ShopListingFile : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The unique numeric ID of a file associated with a digital listing.</summary>
        public int? CreatedTimestamp { get; set; }
        /// <summary>The unique numeric ID of a file associated with a digital listing.</summary>
        public int? CreateTimestamp { get; set; }
        /// <summary>The file name string for a file associated with a digital listing.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filename { get; set; }
#nullable restore
#else
        public string Filename { get; set; }
#endif
        /// <summary>A human-readable format size string for the size of a file.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filesize { get; set; }
#nullable restore
#else
        public string Filesize { get; set; }
#endif
        /// <summary>A type string indicating a file&apos;s MIME type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Filetype { get; set; }
#nullable restore
#else
        public string Filetype { get; set; }
#endif
        /// <summary>The unique numeric ID of a file associated with a digital listing.</summary>
        public long? ListingFileId { get; set; }
        /// <summary>The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.</summary>
        public long? ListingId { get; set; }
        /// <summary>The numeric index of the display order position of this file in the listing, starting at 1.</summary>
        public int? Rank { get; set; }
        /// <summary>A number indicating the size of a file, measured in bytes.</summary>
        public int? SizeBytes { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListingFile"/> and sets the default values.
        /// </summary>
        public ShopListingFile()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListingFile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListingFile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DevTKSS.MyManufacturerERP.Clients.Etsy.Models.ShopListingFile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "create_timestamp", n => { CreateTimestamp = n.GetIntValue(); } },
                { "created_timestamp", n => { CreatedTimestamp = n.GetIntValue(); } },
                { "filename", n => { Filename = n.GetStringValue(); } },
                { "filesize", n => { Filesize = n.GetStringValue(); } },
                { "filetype", n => { Filetype = n.GetStringValue(); } },
                { "listing_file_id", n => { ListingFileId = n.GetLongValue(); } },
                { "listing_id", n => { ListingId = n.GetLongValue(); } },
                { "rank", n => { Rank = n.GetIntValue(); } },
                { "size_bytes", n => { SizeBytes = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("created_timestamp", CreatedTimestamp);
            writer.WriteIntValue("create_timestamp", CreateTimestamp);
            writer.WriteStringValue("filename", Filename);
            writer.WriteStringValue("filesize", Filesize);
            writer.WriteStringValue("filetype", Filetype);
            writer.WriteLongValue("listing_file_id", ListingFileId);
            writer.WriteLongValue("listing_id", ListingId);
            writer.WriteIntValue("rank", Rank);
            writer.WriteIntValue("size_bytes", SizeBytes);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
